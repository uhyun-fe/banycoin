{"version":3,"sources":["style.js","components/Game/GameStyle.js","assets/images/pickaxe.png","assets/images/coin.png","assets/images/dog1.jpg","components/Game/GameLogic.js","components/Game/Game.js","components/Coin/CoinStyle.js","components/Coin/CoinLogic.js","components/Coin/Coin.js","App.js","index.js"],"names":["styled","div","GameLogic","words","isRightWord","value","filter","item","length","Game","pickaxe","setPickaxe","useState","data","parseInt","Math","random","setWords","inputRef","useRef","useEffect","className","map","index","src","pickaxeIcon","alt","type","ref","placeholder","onKeyPress","key","target","current","removeWordInScreen","CoinLogic","successList","setSuccessList","setNewDate","now","Date","getFullYear","toString","substring","getMonth","getDate","getHours","getMinutes","getSeconds","setMagicNumberList","setIsSuccess","banycoin","setBanycoin","result","magicNumberList","i","push","makeNewMagicNumber","list","forEach","isTen","concat","time","number","coin","isLucky","Coin","magicNumber","setMagicNumber","isSuccess","onClick","alert","num","coinIcon","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.769ac350.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport default styled.div`\n   display: flex;\n   width: 100vw;\n   height: 100vh;\n   background: #333;\n   .game_zone,\n   .coin_zone {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      width: 100%;\n   }\n`;\n","import styled from \"styled-components\";\n\nexport default styled.div`\n   width: 90%;\n   height: 80%;\n   .word_area {\n      position: relative;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      height: 90%;\n      background: #222;\n      overflow: hidden;\n      ul {\n         position: absolute;\n         display: flex;\n         flex-wrap: wrap;\n         justify-content: space-between;\n         align-items: center;\n         width: 60%;\n         color: white;\n         li {\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            width: 100px;\n            height: 40px;\n         }\n      }\n   }\n   .input_area {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 0 3%;\n      height: 10%;\n      background: white;\n      span {\n         display: flex;\n         align-items: center;\n         min-width: 100px;\n         font-size: 18px;\n         font-weight: bold;\n         img {\n            margin-right: 10px;\n            width: 20px;\n            height: 22px;\n         }\n      }\n      input {\n         padding-left: 10px;\n         width: 80%;\n         height: 40px;\n         border: 2px solid #333;\n         border-radius: 5px;\n         &:focus {\n            border-color: #ff0606;\n         }\n      }\n   }\n`;\n","export default __webpack_public_path__ + \"static/media/pickaxe.71a6ef87.png\";","export default __webpack_public_path__ + \"static/media/coin.eef01f71.png\";","export default __webpack_public_path__ + \"static/media/dog1.8d49008b.jpg\";","import React from \"react\";\n\nconst GameLogic = ({ words }) => {\n   const isRightWord = ({ value }) => {\n      const result = words.filter((item) => item === value);\n      return result.length > 0;\n   };\n\n   return { isRightWord };\n};\n\nexport default GameLogic;\n","import React, { useEffect, useRef, useState } from \"react\";\n\nimport View from \"./GameStyle\";\nimport { pickaxeIcon } from \"../../assets/images\";\nimport data from \"../../assets/contents/words.json\";\nimport GameLogic from \"./GameLogic\";\n\nconst Game = ({ pickaxe, setPickaxe }) => {\n   const [words, setWords] = useState(data.words[parseInt(Math.random() * 10)]);\n\n   const { isRightWord } = GameLogic({ words });\n   const inputRef = useRef(null);\n\n   const removeWordInScreen = ({ inputRef, value }) => {\n      inputRef.current.value = \"\";\n      value !== null && setWords(words.map((item) => (item === value ? \"\" : item)));\n      value !== null && setPickaxe(pickaxe + 1);\n   };\n\n   useEffect(() => {\n      if (!words.filter((item) => item).length) setWords(data.words[parseInt(Math.random() * 10)]);\n   }, [words]);\n\n   return (\n      <View>\n         <div className=\"word_area\">\n            <ul>{words && words.map((item, index) => <li key={index}>{item}</li>)}</ul>\n         </div>\n         <div className=\"input_area\">\n            <span>\n               <img src={pickaxeIcon} alt=\"pickaxe\" /> X {pickaxe}\n            </span>\n            <input\n               type=\"text\"\n               ref={inputRef}\n               placeholder=\"단어를 입력하세요\"\n               onKeyPress={({ key, target: { value } }) =>\n                  key === \"Enter\" && removeWordInScreen({ inputRef, value: isRightWord({ value }) ? value : null })\n               }\n            />\n         </div>\n      </View>\n   );\n};\n\nexport default Game;\n","import styled from \"styled-components\";\n\nexport default styled.div`\n   width: 90%;\n   span {\n      display: block;\n      text-align: center;\n   }\n   .pickaxe {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      margin-bottom: 20px;\n      min-width: 100px;\n      color: white;\n      font-size: 18px;\n      font-weight: bold;\n      img {\n         margin-right: 10px;\n         width: 20px;\n         height: 22px;\n      }\n   }\n   .text {\n      color: white;\n      font-size: 14px;\n      strong {\n         color: #fedb41;\n      }\n      &.desc {\n         margin-top: 20px;\n         padding-left: 10%;\n         display: flex;\n         flex-direction: column;\n         align-items: flex-start;\n         text-align: left;\n         font-size: 12px;\n         img {\n            margin: 0 5px;\n            width: 10px;\n            height: 12px;\n         }\n      }\n   }\n   .number_area {\n      margin-top: 20px;\n      width: 100%;\n      text-align: center;\n      span {\n         display: inline-flex;\n         justify-content: center;\n         align-items: center;\n         margin: 0 20px;\n         padding-top: 3px;\n         width: 50px;\n         height: 50px;\n         color: #fedb41;\n         font-size: 25px;\n      }\n   }\n   button {\n      margin: 20px auto 0;\n      padding-top: 2px;\n      display: block;\n      width: 30%;\n      height: 40px;\n      color: #333;\n      font-size: 18px;\n      font-weight: bold;\n      border: none;\n      border-radius: 2.5px;\n      background: #fedb41;\n      transition: background 0.1s ease-in-out;\n      &:hover {\n         background: #edca30;\n      }\n      &:active {\n         background: #dcb91f;\n      }\n   }\n   .isSuccess {\n      margin: 30px 0 20px;\n      color: white;\n      font-weight: bold;\n   }\n   .table {\n      margin-bottom: 30px;\n      max-height: 200px;\n      overflow: auto;\n      table {\n         margin: 0 auto;\n         table-layout: fixed;\n         width: 80%;\n         color: white;\n         font-size: 14px;\n         border-spacing: 0;\n         border-collapse: collapse;\n         td,\n         th {\n            padding: 7px;\n            text-align: center;\n            border-bottom: 1px solid #777;\n         }\n      }\n   }\n   .total_area {\n      display: flex;\n      justify-content: flex-end;\n      align-items: center;\n      padding-right: 10%;\n      color: #ffffff;\n      font-size: 20px;\n      img {\n         margin-right: 10px;\n         width: 30px;\n         height: 30px;\n      }\n      .banycoin {\n         margin-right: 10px;\n         color: #fedb41;\n      }\n   }\n`;\n","import React, { useState } from \"react\";\n\nconst CoinLogic = () => {\n   const [successList, setSuccessList] = useState([]);\n\n   // 매직넘버 생성\n   const makeNewMagicNumber = () => {\n      let magicNumberList = [];\n      for (let i = 0; i < 3; i++) {\n         magicNumberList.push(parseInt(Math.random() * 10));\n      }\n      return magicNumberList;\n   };\n\n   const isTen = ({ list }) => {\n      let result = 0;\n      list.forEach((item) => {\n         result += item;\n      });\n      return result === 10;\n   };\n\n   const isLucky = ({ list }) => {\n      let result = 0;\n      list.forEach((item) => {\n         if (item !== 7) return;\n         result++;\n      });\n      return result === 3;\n   };\n\n   const setMagicNumberList = ({ setIsSuccess, banycoin, setBanycoin, pickaxe, setPickaxe }) => {\n      setIsSuccess(false);\n      setPickaxe(pickaxe - 1);\n      const result = makeNewMagicNumber();\n      if (isTen({ list: result })) {\n         setBanycoin(banycoin + 1);\n         setSuccessList(successList.concat({ time: setNewDate(), number: result, coin: 1 }));\n         setIsSuccess(true);\n      }\n      if (isLucky({ list: result })) {\n         setBanycoin(banycoin + 3);\n         setSuccessList(successList.concat({ time: setNewDate(), number: result, coin: 3 }));\n         setIsSuccess(true);\n      }\n      return result;\n   };\n\n   // new Date 가공\n   const setNewDate = () => {\n      let now = new Date();\n      return `${now.getFullYear().toString().substring(2)}-${now.getMonth()}-${now.getDate()} ${now.getHours()}:${now.getMinutes()}:${\n         now.getSeconds() < 10 ? \"0\" : \"\"\n      }${now.getSeconds()}`;\n   };\n\n   return { setMagicNumberList, successList };\n};\n\nexport default CoinLogic;\n","import React, { useState } from \"react\";\n\nimport View from \"./CoinStyle\";\nimport { coinIcon, pickaxeIcon } from \"../../assets/images/index\";\nimport CoinLogic from \"./CoinLogic\";\n\nconst Coin = ({ pickaxe, setPickaxe }) => {\n   const { setMagicNumberList, successList } = CoinLogic();\n\n   const [banycoin, setBanycoin] = useState(0);\n   const [magicNumber, setMagicNumber] = useState(false);\n   const [isSuccess, setIsSuccess] = useState(false);\n\n   return (\n      <View>\n         <span className=\"pickaxe\">\n            <img src={pickaxeIcon} alt=\"pickaxe\" /> X {pickaxe}\n         </span>\n         <span className=\"text\">\n            매직넘버를 더해 <strong>10</strong>이 되면 채굴 성공!\n         </span>\n         <span className=\"text\">\n            매직넘버가 모두 <strong>7</strong>로 나오면 <strong>10 BNC</strong> 채굴!\n         </span>\n         {magicNumber && (\n            <div className=\"number_area\">\n               <span>{magicNumber && magicNumber[0]}</span>\n               <span>{magicNumber && magicNumber[1]}</span>\n               <span>{magicNumber && magicNumber[2]}</span>\n            </div>\n         )}\n         <button\n            onClick={() => {\n               if (!pickaxe) return alert(\"채굴기회가 없습니다.\");\n               setMagicNumber(setMagicNumberList({ setIsSuccess, banycoin, setBanycoin, pickaxe, setPickaxe }));\n            }}\n         >\n            채굴\n         </button>\n         <span className=\"isSuccess\">{magicNumber && (isSuccess ? \"Success!\" : \"Failed..\")}</span>\n         <div className=\"table\">\n            <table>\n               <thead>\n                  <tr>\n                     <th>획득시간</th>\n                     <th>매직넘버</th>\n                     <th>획득코인</th>\n                  </tr>\n               </thead>\n               <tbody>\n                  {successList &&\n                     successList.map((item, index) => (\n                        <tr key={index}>\n                           <td>{item.time}</td>\n                           <td>{item.number.map((num) => num + \" \")}</td>\n                           <td>{item.coin} BNC</td>\n                        </tr>\n                     ))}\n               </tbody>\n            </table>\n         </div>\n         <div className=\"total_area\">\n            <img src={coinIcon} alt=\"banycoin\" />\n            <span className=\"banycoin\">{banycoin}</span>BNC\n         </div>\n         <span className=\"text desc\">\n            <span>\n               * 채굴기회\n               <img src={pickaxeIcon} alt=\"pickaxe\" />는 왼쪽의 단어입력게임을 통해 얻으실 수 있습니다.\n            </span>\n            <span>* 바니코인은 저장되지 않습니다. 새로고침시 리셋됩니다.</span>\n         </span>\n      </View>\n   );\n};\n\nexport default Coin;\n","import React, { useState } from \"react\";\n\nimport View from \"./style\";\nimport Game from \"./components/Game/Game\";\nimport Coin from \"./components/Coin/Coin\";\n\nconst App = () => {\n   const [pickaxe, setPickaxe] = useState(0);\n\n   return (\n      <View>\n         <div className=\"game_zone\">\n            <Game pickaxe={pickaxe} setPickaxe={setPickaxe} />\n         </div>\n         <div className=\"coin_zone\">\n            <Coin pickaxe={pickaxe} setPickaxe={setPickaxe} />\n         </div>\n      </View>\n   );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n   <React.StrictMode>\n      <App />\n   </React.StrictMode>,\n   document.getElementById(\"root\")\n);\n"],"sourceRoot":""}